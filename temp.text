 {/* Suggestions Section */}
                <motion.div
                  initial={{ opacity: 0, y: 30 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: 0.5 }}
                  className={`${isFullscreen && fullscreenSection !== "suggestions" ? "hidden" : ""} ${isFullscreen && fullscreenSection === "suggestions" ? "h-full overflow-auto" : ""}`}
                >
                  <GlassCard className="overflow-hidden">
                    <div
                      className="p-6 cursor-pointer flex justify-between items-center"
                      onClick={() => toggleSection("suggestions")}
                    >
                      <h2 className="text-xl font-semibold flex items-center gap-3 text-indigo-600 dark:text-indigo-300">
                        <NeumorphicIcon icon={Lightbulb} color="primary" />
                        Suggestions
                      </h2>
                      <div className="flex items-center gap-2">
                        {!isFullscreen ? (
                          <button
                            onClick={(e) => {
                              e.stopPropagation()
                              toggleFullscreen("suggestions")
                            }}
                            className="p-1.5 rounded-lg text-gray-500 hover:text-indigo-500 hover:bg-indigo-50 dark:hover:bg-indigo-900/30 transition-colors"
                          >
                            <Maximize size={18} />
                          </button>
                        ) : (
                          <button
                            onClick={(e) => {
                              e.stopPropagation()
                              toggleFullscreen(null)
                            }}
                            className="p-1.5 rounded-lg text-gray-500 hover:text-indigo-500 hover:bg-indigo-50 dark:hover:bg-indigo-900/30 transition-colors"
                          >
                            <Minimize size={18} />
                          </button>
                        )}
                        <span className="text-sm text-gray-500 dark:text-gray-400 hidden md:inline-block">
                          {activeSection === "suggestions" ? "Hide details" : "Show details"}
                        </span>
                        <div className="text-gray-400">
                          {activeSection === "suggestions" ? <ChevronUp size={20} /> : <ChevronDown size={20} />}
                        </div>
                      </div>
                    </div>

                    {activeSection === "suggestions" && (
                      <motion.div
                        initial={{ opacity: 0, height: 0 }}
                        animate={{ opacity: 1, height: "auto" }}
                        exit={{ opacity: 0, height: 0 }}
                        transition={{ duration: 0.3 }}
                        className="px-6 pb-6"
                      >
                        <motion.div
                          initial={{ opacity: 0, y: 20 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ duration: 0.5 }}
                          whileHover={{
                            y: -5,
                            boxShadow: "0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1)",
                          }}
                        >
                          <GlassCard className="p-6" glowColor="accent">
                            <div className="flex items-center gap-3 mb-6">
                              <NeumorphicIcon icon={Wand2} color="accent" />
                              <h3 className="font-medium text-emerald-700 dark:text-emerald-300">
                                SEO Improvement Suggestions
                              </h3>
                            </div>

                            {intro && (
                              <div className="text-gray-700 dark:text-gray-300 text-base mb-6 leading-relaxed">
                                {intro}
                              </div>
                            )}

                            {items?.length > 0 ? (
                              <div className="space-y-4">
                                {items.map((item, index) => (
                                  <motion.div
                                    key={index}
                                    initial={{ opacity: 0, x: -20 }}
                                    animate={{ opacity: 1, x: 0 }}
                                    transition={{
                                      duration: 0.4,
                                      delay: index * 0.1,
                                    }}
                                    className={`bg-white/80 dark:bg-slate-900/80 rounded-xl border ${
                                      expandedSuggestion === index
                                        ? "border-emerald-300 dark:border-emerald-700"
                                        : "border-emerald-100/50 dark:border-emerald-900/30 hover:border-emerald-300 dark:hover:border-emerald-700"
                                    } transition-colors group overflow-hidden`}
                                  >
                                    <div className="p-5 cursor-pointer" onClick={() => toggleExpand(index)}>
                                      <div className="flex items-start gap-3">
                                        <div className="mt-0.5 bg-emerald-100 dark:bg-emerald-900/30 p-1.5 rounded-lg group-hover:bg-emerald-200 dark:group-hover:bg-emerald-800/30 transition-colors flex-shrink-0">
                                          <CheckSquare size={18} className="text-emerald-500 dark:text-emerald-400" />
                                        </div>
                                        <div className="flex-1">
                                          <div className="flex justify-between items-center">
                                            <h4 className="text-gray-800 dark:text-gray-200 font-semibold text-lg">
                                              {item.number}. {item.title}
                                            </h4>
                                            {expandedSuggestion === index ? (
                                              <ChevronUp className="h-5 w-5 text-gray-500 dark:text-gray-400 flex-shrink-0" />
                                            ) : (
                                              <ChevronDown className="h-5 w-5 text-gray-500 dark:text-gray-400 flex-shrink-0" />
                                            )}
                                          </div>

                                          {expandedSuggestion !== index && (
                                            <p className="text-gray-600 dark:text-gray-400 mt-1 line-clamp-2">
                                              {item.description}
                                            </p>
                                          )}
                                        </div>
                                      </div>
                                    </div>

                                    {expandedSuggestion === index && (
                                      <motion.div
                                        initial={{ opacity: 0, height: 0 }}
                                        animate={{ opacity: 1, height: "auto" }}
                                        exit={{ opacity: 0, height: 0 }}
                                        transition={{ duration: 0.3 }}
                                      >
                                        <Separator className="w-full" />
                                        <div className="p-5 pt-4">
                                          <div className="text-gray-700 dark:text-gray-300 leading-relaxed">
                                            {item.description}
                                          </div>

                                          {item.actionableStep && (
                                            <div className="mt-4 bg-indigo-50 dark:bg-indigo-900/20 p-4 rounded-lg border border-indigo-100 dark:border-indigo-800/30">
                                              <div className="flex items-center gap-2 mb-2">
                                                <ArrowRight
                                                  size={16}
                                                  className="text-indigo-600 dark:text-indigo-400"
                                                />
                                                <h5 className="text-indigo-700 dark:text-indigo-300 font-medium">
                                                  Actionable Step
                                                </h5>
                                              </div>
                                              <p className="text-gray-700 dark:text-gray-300 pl-6">
                                                {item.actionableStep}
                                              </p>
                                            </div>
                                          )}
                                        </div>
                                      </motion.div>
                                    )}
                                  </motion.div>
                                ))}
                              </div>
                            ) : (
                              <div className="bg-white/80 dark:bg-slate-900/80 p-5 rounded-xl border border-emerald-100/50 dark:border-emerald-900/30">
                                <p className="text-gray-800 dark:text-gray-200">No suggestions available.</p>
                              </div>
                            )}

                            {competitorAnalysis && (
                              <div className="mt-6 pt-6 border-t border-emerald-100/50 dark:border-emerald-900/30">
                                <h4 className="text-gray-800 dark:text-gray-200 font-semibold mb-3 flex items-center gap-2">
                                  <Target size={16} className="text-indigo-500" />
                                  Competitor Analysis
                                </h4>
                                <div className="text-gray-700 dark:text-gray-300 leading-relaxed">
                                  {competitorAnalysis}
                                </div>
                              </div>
                            )}
                          </GlassCard>
                        </motion.div>
                      </motion.div>
                    )}
                  </GlassCard>
                </motion.div>

                {/* Action Buttons */}
                <AnimatePresence>
                  {!isFullscreen && (
                    <motion.div
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      exit={{ opacity: 0, y: -20 }}
                      transition={{ duration: 0.6, delay: 0.6 }}
                      className="flex flex-wrap gap-4 justify-end mt-8"
                    >
                      <GradientButton onClick={handleCopy} gradient="accent" icon={copied ? CheckCircle : Copy}>
                        {copied ? "Copied!" : "Copy Suggestions"}
                      </GradientButton>
                      <GradientButton onClick={handleDownload} gradient="cosmic" icon={Download}>
                        Download Suggestions
                      </GradientButton>
                    </motion.div>
                  )}
                </AnimatePresence>
              </motion.div>
            )}
          </AnimatePresence>
        </div>